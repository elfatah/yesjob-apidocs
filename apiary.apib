FORMAT: 1A
HOST: http://api.yesjob.suitdev.com/v1/

# YesJob Development API

This section documents YesJob's API, for developers who want to write code that interacts with YesJob sites and their data.

## Group Authentication

The YesJobâ€™s authentication has 2 authorization system including:
+ Web Authentication (Authorization Token)
+ Identity Providers (Social Media), include:
    - Facebook
    - Twitter

## Authorization Tokens [/user/login]

The YesJob API offers a very simple way of authenticating the API that should only be used for testing and development purposes.. Note that this authentication scheme is off by default for every YesJob user.

The Authorization Tokens based on web authentication scheme relies on HTTP's authentication [RFC](http://www.ietf.org/rfc/rfc2617.txt) to authenticate clients of the YesJob API using a YesJob **email** and **password**. This authentication scheme may be limited or turned off by default in future versions of the YesJob platform and therefore should not be relied upon for production application development. It is a very simple and useful way to get started with the API.

### Create an Authorization Token [POST]

Create a new authorization token for an authenticated user. This authorization token may be used to access protected resources and already encoded for **email** and **password** by using urlencode.

**Example:**

```
$ curl --include \
  --request POST \
  --url http://api.yesjob.suitdev.com/v1/user/login \
  --header "Content-Type: application/x-www-form-urlencoded" \
  --header "Cache-Control: no-cache" \
  --header "Connection: keep-alive" \
  --data-binary "email=test%40suitmedia.com&password=test"
```

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            email=test%40suitmedia.com&password=test

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Login Success",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 1,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "0000-00-00",
                        "email": "test@suitmedia.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "08123456789",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Facebook Auth [/user/fblogin]

### Facebook Auth [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            facebook_id=fbid&facebook_token=token&name=name

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Login Success",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 1,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "0000-00-00",
                        "email": "test@suitmedia.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "08123456789",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Twitter Auth [/user/twlogin]

### Twitter Auth[POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            twitter_id=twid&twitter_token=token&twitter_secret=secret&name=name

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Login Success",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 1,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "0000-00-00",
                        "email": "test@suitmedia.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "08123456789",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Forgotted Password [/user/forgotpassword/{email}]

+ Parameters

    + email: test@test.com (required, string) - Email of User in form of a string

### Forgot Password [GET]

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Reset password email sent!"
            }

## Sign-Out [/user/logout/?token={token}]

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### Logout [POST]

Description: Logout

**Example:**

```
$ curl --request POST \
  --url http://api.yesjob.suitdev.com/v1/user/logout?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Logout Success, session ended!"
            }

## Group Registration

## User Registration [/user/register]

### Register [POST]

Description: Register

**Example:**

```
$ curl --include \
  --request POST \
  --url http://api.yesjob.suitdev.com/v1/user/register \
  --header "Content-Type: application/x-www-form-urlencoded" \
  --header "Cache-Control: no-cache" \
  --header "Connection: keep-alive" \
  --data-binary "email=johndoe%40test.com&password=secret&birth_date=1991-11-11"
```

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            email=johndoe%40test.com&password=secret&birth_date=1991-11-11

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "User registered!",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 2,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "1991-11-11",
                        "email": "johndoe@test.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Checking Email [/user/check/{email}]

+ Parameters

    + email: test@test.com (required, string) - Email of User in form of a string

### Check by Email [GET]

Description: Check by Email

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/user/check/test@suitmedia.com \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "User profile retrieved",
                "result": {
                    "id": 1,
                    "username": "johndoe",
                    "name": "John Doe",
                    "last_name": "Admin",
                    "birthdate": "0000-00-00",
                    "email": "test@suitmedia.com",
                    "picture": "http://api.yesjob.dev/files/profilepicture/johndoe.jpg",
                    "role": "admin",
                    "phone_number": "08117304245",
                    "registration_date": "2012-01-01 00:00:00",
                    "last_visit": "2016-10-23 17:14:35",
                    "status": "active",
                    "escrow_amount": 500000,
                    "fb_id": null,
                    "tw_id": null,
                    "gp_id": null,
                    "referral_code": null,
                    "referral_user_id": null,
                    "created_at": "2014-09-22 03:30:25",
                    "updated_at": "2016-10-23 17:14:35"
                }
            }

## Send Email Verification [/user/sendverification/{email}]

+ Parameters

    + email: test@test.com (required, string) - Email of User in form of a string

### Send Verification [GET]

Description: Check by Email

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/user/sendverification/test@suitmedia.com \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Verification email sent!",
                "result": null
            }

## Verifying Email [/user/verifyemail/{code}/{email}/process]

+ Parameters

    + code: XCNCOD (required, string) - Activation Code
    + email: test@test.com (required, string) - Email of User in form of a string

### Verify Email [GET]

Description: Check by Email

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/user/verifyemail/XCNCOD/test@suitmedia.com \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Email verified!"
            }

## Register GcmId [/user/registergcmid?token={token}]

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### Register GcmId [POST]

Add Gcm Registration ID.

**Example:**

```
$ curl --include \
  --request POST \
  --url http://api.yesjob.suitdev.com/v1/user/registergcmid?token=3448bdc9e8097cf66d969118a8098187 \
  --header "Content-Type: application/x-www-form-urlencoded" \
  --header "Cache-Control: no-cache" \
  --header "Connection: keep-alive" \
  --data-binary "registration_id=12"
```

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            registration_id=12

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "GCM Registration ID Updated",
                "result": {
                    "id": 1,
                    "username": "johndoe",
                    "name": "John Doe",
                    "last_name": "Admin",
                    "birthdate": "0000-00-00",
                    "email": "test@suitmedia.com",
                    "picture": "http://api.yesjob.dev/files/profilepicture/johndoe.jpg",
                    "role": "admin",
                    "phone_number": "08117304245",
                    "registration_date": "2012-01-01 00:00:00",
                    "last_visit": "2016-10-23 17:14:35",
                    "status": "active",
                    "escrow_amount": 500000,
                    "fb_id": null,
                    "tw_id": null,
                    "gp_id": null,
                    "referral_code": null,
                    "referral_user_id": null,
                    "created_at": "2014-09-22 03:30:25",
                    "updated_at": "2016-10-23 17:14:35"
                }
            }

## Un-Register GcmId [/user/unregistergcmid?token={token}]

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### Un-Register GcmId [POST]

Remove Gcm Registration ID.

**Example:**

```
$ curl --include \
  --request POST \
  --url http://api.yesjob.suitdev.com/v1/user/unregistergcmid?token=3448bdc9e8097cf66d969118a8098187 \
  --header "Content-Type: application/x-www-form-urlencoded" \
  --header "Cache-Control: no-cache" \
  --header "Connection: keep-alive" \
  --data-binary "registration_id=12"
```

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            registration_id=12

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "GCM Registration ID Deleted",
                "result": {
                    "id": 1,
                    "username": "johndoe",
                    "name": "John Doe",
                    "last_name": "Admin",
                    "birthdate": "0000-00-00",
                    "email": "test@suitmedia.com",
                    "picture": "http://api.yesjob.dev/files/profilepicture/johndoe.jpg",
                    "role": "admin",
                    "phone_number": "08117304245",
                    "registration_date": "2012-01-01 00:00:00",
                    "last_visit": "2016-10-23 17:14:35",
                    "status": "active",
                    "escrow_amount": 500000,
                    "fb_id": null,
                    "tw_id": null,
                    "gp_id": null,
                    "referral_code": null,
                    "referral_user_id": null,
                    "created_at": "2014-09-22 03:30:25",
                    "updated_at": "2016-10-23 17:14:35"
                }
            }

## Group Masterdata

## Country [/masterdata/countries?token={token}]

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List All Countries [GET]

Get json data countries

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/countries?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Region [/masterdata/regions/{country_id}?token={token}]

+ Parameters

    + country_id: 1 (number) - ID of Country as an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Regions by Country [GET]

Get json data regions

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/regions/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## City [/masterdata/cities/{region_id}?token={token}]

+ Parameters

    + region_id: 1 (number) - ID of Region as an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Cities by Region [GET]

Get json data cities

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/cities/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Area [/masterdata/areas/{city_id}?token={token}]

+ Parameters

    + city_id: 1 (number) - ID of City as an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Areas by Region [GET]

Get json data areas

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/areas/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Environment [/masterdata/environments?token={token}]

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List All Environments [GET]

Get json data environments

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/environments?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Industry [/masterdata/industries?token={token}]

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List All Industries [GET]

Get json data industries

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/industries?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Skill [/masterdata/skills/{industry_id}?token={token}]

+ Parameters

    + industry_id: 1 (number) - ID of Industry as an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Skills by Industry [GET]

Get json data skills

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/skills/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Profession [/masterdata/professions/{industry_id}?token={token}]

+ Parameters

    + industry_id: 1 (number) - ID of Industry as an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Professions by Industry [GET]

Get json data professions

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/professions/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Degree [/masterdata/degrees?token={token}]

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List All Degrees [GET]

Get json data degrees

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/degrees?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Major [/masterdata/majors/{degree_id}?token={token}]

+ Parameters

    + degree_id: 1 (number) - ID of Degree as an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Majors by Degree [GET]

Get json data majors

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/majors/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Language [/masterdata/languages?token={token}]

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List All Languages [GET]

Get json data languages

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/languages?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Group Company

Resources related to questions in the API.

## Company [/company/{id}]

A Question object has the following attributes:

+ company
+ published_at - An ISO8601 date when the question was published.
+ url
+ choices - An array of Choice objects.

+ Parameters
    + id: 1 (required, number) - ID of the Question in form of an integer

### View a Company Detail [GET]

+ Response 200 (application/json)

        {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Companies [/company/all]

### List All Companies [GET]

+ Response 200 (application/json)

    + Headers

            Link: </questions?page=2>; rel="next"

    + Body

            [
                {
                    "question": "Favourite programming language?",
                    "published_at": "2014-11-11T08:40:51.620Z",
                    "url": "/questions/1",
                    "choices": [
                        {
                            "choice": "Swift",
                            "url": "/questions/1/choices/1",
                            "votes": 2048
                        }, {
                            "choice": "Python",
                            "url": "/questions/1/choices/2",
                            "votes": 1024
                        }, {
                            "choice": "Objective-C",
                            "url": "/questions/1/choices/3",
                            "votes": 512
                        }, {
                            "choice": "Ruby",
                            "url": "/questions/1/choices/4",
                            "votes": 256
                        }
                    ]
                }
            ]

## Group Vacancy

Resources related to questions in the API.

## Vacancy [/vacancy/{id}]

A Question object has the following attributes:

+ vacancy
+ published_at - An ISO8601 date when the question was published.
+ url
+ choices - An array of Choice objects.

+ Parameters
    + id: 1 (required, number) - ID of the Question in form of an integer

### View a Vacancy Detail [GET]

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Vacancies [/vacancy/all]

### List All Vacancies [GET]

+ Response 200 (application/json)

    + Headers

            Link: </questions?page=2>; rel="next"

    + Body

            [
                {
                    "question": "Favourite programming language?",
                    "published_at": "2014-11-11T08:40:51.620Z",
                    "url": "/questions/1",
                    "choices": [
                        {
                            "choice": "Swift",
                            "url": "/questions/1/choices/1",
                            "votes": 2048
                        }, {
                            "choice": "Python",
                            "url": "/questions/1/choices/2",
                            "votes": 1024
                        }, {
                            "choice": "Objective-C",
                            "url": "/questions/1/choices/3",
                            "votes": 512
                        }, {
                            "choice": "Ruby",
                            "url": "/questions/1/choices/4",
                            "votes": 256
                        }
                    ]
                }
            ]

## Trending Vacancies [/vacancy/trending]

### List Trending Vacancies [GET]

+ Response 200 (application/json)

    + Headers

            Link: </questions?page=2>; rel="next"

    + Body

            [
                {
                    "question": "Favourite programming language?",
                    "published_at": "2014-11-11T08:40:51.620Z",
                    "url": "/questions/1",
                    "choices": [
                        {
                            "choice": "Swift",
                            "url": "/questions/1/choices/1",
                            "votes": 2048
                        }, {
                            "choice": "Python",
                            "url": "/questions/1/choices/2",
                            "votes": 1024
                        }, {
                            "choice": "Objective-C",
                            "url": "/questions/1/choices/3",
                            "votes": 512
                        }, {
                            "choice": "Ruby",
                            "url": "/questions/1/choices/4",
                            "votes": 256
                        }
                    ]
                }
            ]

## Archive Vacancies [/vacancy/archive]

### List Archive Vacancies [GET]

+ Response 200 (application/json)

    + Headers

            Link: </questions?page=2>; rel="next"

    + Body

            [
                {
                    "question": "Favourite programming language?",
                    "published_at": "2014-11-11T08:40:51.620Z",
                    "url": "/questions/1",
                    "choices": [
                        {
                            "choice": "Swift",
                            "url": "/questions/1/choices/1",
                            "votes": 2048
                        }, {
                            "choice": "Python",
                            "url": "/questions/1/choices/2",
                            "votes": 1024
                        }, {
                            "choice": "Objective-C",
                            "url": "/questions/1/choices/3",
                            "votes": 512
                        }, {
                            "choice": "Ruby",
                            "url": "/questions/1/choices/4",
                            "votes": 256
                        }
                    ]
                }
            ]

## Matched Vacancies [/vacancy/matched/{user_id}]

A Question object has the following attributes:

+ vacancy
+ published_at - An ISO8601 date when the question was published.
+ url
+ choices - An array of Choice objects.

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### List Matched Vacancies of User [GET]

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Matched Interested Vacancies [/vacancy/matched/{user_id}/interested]

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### List Matched Interested Vacancies of User [GET]

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Matched Not-Interested Vacancies [/vacancy/matched/{user_id}/notinterested]

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### List Matched Not-Interested Vacancies of User [GET]

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Group User Information

Resources related to questions in the API.

## User Profile [/profile/{user_id}]

A Question object has the following attributes:

+ vacancy
+ published_at - An ISO8601 date when the question was published.
+ url
+ choices - An array of Choice objects.

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### View User Profile [GET]

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Update Profile [/profile/{user_id}/update]

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### Update User Profile [GET]

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }

## Profile Experiences [/profile/experiences/{user_id}]

A Question object has the following attributes:

+ vacancy
+ published_at - An ISO8601 date when the question was published.
+ url
+ choices - An array of Choice objects.

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### List Experiences of User [GET]

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Add Experience [/profile/experience/{user_id}/add]

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### Add Experience of User [POST]

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }

## Profile Educations [/profile/educations/{user_id}]

A Question object has the following attributes:

+ vacancy
+ published_at - An ISO8601 date when the question was published.
+ url
+ choices - An array of Choice objects.

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### List Educations of User [GET]

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Add Education [/profile/education/{user_id}/add]

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### Add Education of User [POST]

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }

## Profile Organizations [/profile/organizations/{user_id}]

A Question object has the following attributes:

+ vacancy
+ published_at - An ISO8601 date when the question was published.
+ url
+ choices - An array of Choice objects.

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### List Organizations of User [GET]

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Add Organization [/profile/organization/{user_id}/add]

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### Add Organization of User [POST]

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }

## Profile Languages [/profile/languages/{user_id}]

A Question object has the following attributes:

+ vacancy
+ published_at - An ISO8601 date when the question was published.
+ url
+ choices - An array of Choice objects.

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### List Languages of User [GET]

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Add Language [/profile/language/{user_id}/add]

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### Add Language of User [POST]

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }

## Profile Skills [/profile/skills/{user_id}]

A Question object has the following attributes:

+ vacancy
+ published_at - An ISO8601 date when the question was published.
+ url
+ choices - An array of Choice objects.

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### List Skills of User [GET]

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Add Skill [/profile/skill/{user_id}/add]

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### Add Skill of User [POST]

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }

## Profile Interested Industries [/profile/interested/industries/{user_id}]

A Question object has the following attributes:

+ vacancy
+ published_at - An ISO8601 date when the question was published.
+ url
+ choices - An array of Choice objects.

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### List Interested Industries of User [GET]

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Add Interested Industry [/profile/interested/industry/{user_id}/add]

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### Add Interested Industry of User [POST]

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }

## Profile Interested Skills [/profile/interested/skills/{user_id}]

A Question object has the following attributes:

+ vacancy
+ published_at - An ISO8601 date when the question was published.
+ url
+ choices - An array of Choice objects.

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### List Interested Skills of User [GET]

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Add Interested Skill [/profile/interested/skill/{user_id}/add]

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### Add Interested Skill of User [POST]

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }

## Profile Interested Professions [/profile/interested/professions/{user_id}]

A Question object has the following attributes:

+ vacancy
+ published_at - An ISO8601 date when the question was published.
+ url
+ choices - An array of Choice objects.

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### List Interested Professions of User [GET]

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Add Interested Profession [/profile/interested/profession/{user_id}/add]

+ Parameters
    + user_id: 1 (required, number) - ID of the Question in form of an integer

### Add Interested Profession of User [POST]

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }

## Group Account

## Account Detail [/user/me]

### View an Account Detail [GET]

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Update Account [/user/me/update]

### Update Account [POST]

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }

## Update Social Media [/user/me/updatesocmed]

### Update Social Media Account [POST]

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }

## Settings [/user/{user_id}/settings]

### View an Account Settings [GET]

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Update Setting [/user/{user_id}/settings/update]

### Update Account Settings [POST]

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }