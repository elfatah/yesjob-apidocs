FORMAT: 1A
HOST: http://api.yesjob.suitdev.com/v1/

# YesJob Development API

This section documents YesJob's API, for developers who want to write code that interacts with YesJob sites and their data.

## Group Authentication

The YesJobâ€™s authentication has 2 authorization system including:
+ Web Authentication (Authorization Token)
+ Identity Providers (Social Media), include:
    - Facebook
    - Twitter

## Authorization Tokens [/user/login]

The YesJob API offers a very simple way of authenticating the API that should only be used for testing and development purposes.. Note that this authentication scheme is off by default for every YesJob user.

The Authorization Tokens based on web authentication scheme relies on HTTP's authentication [RFC](http://www.ietf.org/rfc/rfc2617.txt) to authenticate clients of the YesJob API using a YesJob **email** and **password**. This authentication scheme may be limited or turned off by default in future versions of the YesJob platform and therefore should not be relied upon for production application development. It is a very simple and useful way to get started with the API.

### Create an Authorization Token [POST]

Create a new authorization token for an authenticated user. This authorization token may be used to access protected resources and already encoded for **email** and **password** by using urlencode.

**Example:**

```
$ curl --include \
  --request POST \
  --url http://api.yesjob.suitdev.com/v1/user/login \
  --header "Content-Type: application/x-www-form-urlencoded" \
  --header "Cache-Control: no-cache" \
  --header "Connection: keep-alive" \
  --data-binary "email=test%40suitmedia.com&password=test"
```

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            email=test%40suitmedia.com&password=test

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Login Success",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 1,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "0000-00-00",
                        "email": "test@suitmedia.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "08123456789",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Facebook Auth [/user/fblogin]

### Facebook Auth [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            facebook_id=fbid&facebook_token=token&name=name

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Login Success",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 1,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "0000-00-00",
                        "email": "test@suitmedia.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "08123456789",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Twitter Auth [/user/twlogin]

### Twitter Auth[POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            twitter_id=twid&twitter_token=token&twitter_secret=secret&name=name

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Login Success",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 1,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "0000-00-00",
                        "email": "test@suitmedia.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "08123456789",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Forgotted Password [/user/forgotpassword/{email}]

+ Parameters

    + email: test@test.com (required, string) - Email of User in form of a string

### Forgot Password [GET]

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Reset password email sent!"
            }

## Sign-Out [/user/logout/?token={token}]

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### Logout [POST]

Description: Logout

**Example:**

```
$ curl --request POST \
  --url http://api.yesjob.suitdev.com/v1/user/logout?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Logout Success, session ended!"
            }

## Group Registration

## User Registration [/user/register]

### Register [POST]

Description: Register

**Example:**

```
$ curl --include \
  --request POST \
  --url http://api.yesjob.suitdev.com/v1/user/register \
  --header "Content-Type: application/x-www-form-urlencoded" \
  --header "Cache-Control: no-cache" \
  --header "Connection: keep-alive" \
  --data-binary "email=johndoe%40test.com&password=secret&birth_date=1991-11-11"
```

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            email=johndoe%40test.com&password=secret&birth_date=1991-11-11

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "User registered!",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 2,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "1991-11-11",
                        "email": "johndoe@test.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Checking Email [/user/check/{email}]

+ Parameters

    + email: test@test.com (required, string) - Email of User in form of a string

### Check by Email [GET]

Description: Check by Email

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/user/check/test@suitmedia.com \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "User profile retrieved",
                "result": {
                    "id": 1,
                    "username": "johndoe",
                    "name": "John Doe",
                    "last_name": "Admin",
                    "birthdate": "0000-00-00",
                    "email": "test@suitmedia.com",
                    "picture": "http://api.yesjob.dev/files/profilepicture/johndoe.jpg",
                    "role": "admin",
                    "phone_number": "08117304245",
                    "registration_date": "2012-01-01 00:00:00",
                    "last_visit": "2016-10-23 17:14:35",
                    "status": "active",
                    "escrow_amount": 500000,
                    "fb_id": null,
                    "tw_id": null,
                    "gp_id": null,
                    "referral_code": null,
                    "referral_user_id": null,
                    "created_at": "2014-09-22 03:30:25",
                    "updated_at": "2016-10-23 17:14:35"
                }
            }

## Send Email Verification [/user/sendverification/{email}]

+ Parameters

    + email: test@test.com (required, string) - Email of User in form of a string

### Send Verification [GET]

Description: Check by Email

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/user/sendverification/test@suitmedia.com \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Verification email sent!",
                "result": null
            }

## Verifying Email [/user/verifyemail/{code}/{email}/process]

+ Parameters

    + code: XCNCOD (required, string) - Activation Code
    + email: test@test.com (required, string) - Email of User in form of a string

### Verify Email [GET]

Description: Check by Email

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/user/verifyemail/XCNCOD/test@suitmedia.com \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Email verified!"
            }

## Register GcmId [/user/registergcmid?token={token}]

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### Register GcmId [POST]

Add Gcm Registration ID.

**Example:**

```
$ curl --include \
  --request POST \
  --url http://api.yesjob.suitdev.com/v1/user/registergcmid?token=3448bdc9e8097cf66d969118a8098187 \
  --header "Content-Type: application/x-www-form-urlencoded" \
  --header "Cache-Control: no-cache" \
  --header "Connection: keep-alive" \
  --data-binary "registration_id=12"
```

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            registration_id=12

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "GCM Registration ID Updated",
                "result": {
                    "id": 1,
                    "username": "johndoe",
                    "name": "John Doe",
                    "last_name": "Admin",
                    "birthdate": "0000-00-00",
                    "email": "test@suitmedia.com",
                    "picture": "http://api.yesjob.dev/files/profilepicture/johndoe.jpg",
                    "role": "admin",
                    "phone_number": "08117304245",
                    "registration_date": "2012-01-01 00:00:00",
                    "last_visit": "2016-10-23 17:14:35",
                    "status": "active",
                    "escrow_amount": 500000,
                    "fb_id": null,
                    "tw_id": null,
                    "gp_id": null,
                    "referral_code": null,
                    "referral_user_id": null,
                    "created_at": "2014-09-22 03:30:25",
                    "updated_at": "2016-10-23 17:14:35"
                }
            }

## Un-Register GcmId [/user/unregistergcmid?token={token}]

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### Un-Register GcmId [POST]

Remove Gcm Registration ID.

**Example:**

```
$ curl --include \
  --request POST \
  --url http://api.yesjob.suitdev.com/v1/user/unregistergcmid?token=3448bdc9e8097cf66d969118a8098187 \
  --header "Content-Type: application/x-www-form-urlencoded" \
  --header "Cache-Control: no-cache" \
  --header "Connection: keep-alive" \
  --data-binary "registration_id=12"
```

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            registration_id=12

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "GCM Registration ID Deleted",
                "result": {
                    "id": 1,
                    "username": "johndoe",
                    "name": "John Doe",
                    "last_name": "Admin",
                    "birthdate": "0000-00-00",
                    "email": "test@suitmedia.com",
                    "picture": "http://api.yesjob.dev/files/profilepicture/johndoe.jpg",
                    "role": "admin",
                    "phone_number": "08117304245",
                    "registration_date": "2012-01-01 00:00:00",
                    "last_visit": "2016-10-23 17:14:35",
                    "status": "active",
                    "escrow_amount": 500000,
                    "fb_id": null,
                    "tw_id": null,
                    "gp_id": null,
                    "referral_code": null,
                    "referral_user_id": null,
                    "created_at": "2014-09-22 03:30:25",
                    "updated_at": "2016-10-23 17:14:35"
                }
            }

## Group Masterdata

## Country [/masterdata/countries?token={token}]

A Country object has the following attributes:

+ id
+ code
+ name
+ created_at
+ updated_at

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List All Countries [GET]

Get json data countries.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/countries?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Region [/masterdata/regions/{country_id}?token={token}]

A Region object has the following attributes:

+ id
+ country_id
+ name
+ created_at
+ updated_at

+ Parameters

    + country_id: 1 (number) - ID of Country as an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Regions by Country [GET]

Get json data regions.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/regions/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## City [/masterdata/cities/{region_id}?token={token}]

A City object has the following attributes:

+ id
+ region_id
+ name
+ created_at
+ updated_at

+ Parameters

    + region_id: 1 (number) - ID of Region as an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Cities by Region [GET]

Get json data cities.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/cities/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Area [/masterdata/areas/{city_id}?token={token}]

A Area object has the following attributes:

+ id
+ city_id
+ name
+ created_at
+ updated_at

+ Parameters

    + city_id: 1 (number) - ID of City as an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Areas by Region [GET]

Get json data areas.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/areas/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Environment [/masterdata/environments?token={token}]

A Environment object has the following attributes:

+ id
+ name
+ description
+ created_at
+ updated_at

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List All Environments [GET]

Get json data environments.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/environments?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Industry [/masterdata/industries?token={token}]

A Industry object has the following attributes:

+ id
+ parent_id
+ name
+ description
+ created_at
+ updated_at

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List All Industries [GET]

Get json data industries.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/industries?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Skill [/masterdata/skills/{industry_id}?token={token}]

A Skill object has the following attributes:

+ id
+ industry_id
+ name
+ description
+ created_at
+ updated_at

+ Parameters

    + industry_id: 1 (number) - ID of Industry as an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Skills by Industry [GET]

Get json data skills.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/skills/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Profession [/masterdata/professions/{industry_id}?token={token}]

A Profession object has the following attributes:

+ id
+ parent_id
+ industry_id
+ name
+ description
+ created_at
+ updated_at

+ Parameters

    + industry_id: 1 (number) - ID of Industry as an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Professions by Industry [GET]

Get json data professions.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/professions/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Degree [/masterdata/degrees?token={token}]

A Degree object has the following attributes:

+ id
+ type
+ name
+ description
+ created_at
+ updated_at

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List All Degrees [GET]

Get json data degrees.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/degrees?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Major [/masterdata/majors/{degree_id}?token={token}]

A Major object has the following attributes:

+ id
+ degree_id
+ name
+ description
+ created_at
+ updated_at

+ Parameters

    + degree_id: 1 (number) - ID of Degree as an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Majors by Degree [GET]

Get json data majors.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/majors/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Language [/masterdata/languages?token={token}]

A Language object has the following attributes:

+ id
+ name
+ description
+ created_at
+ updated_at

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List All Languages [GET]

Get json data languages.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/masterdata/languages?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Group Company

Resources related to companies in the API.

## Company [/company/{id}?token{token}]

A Company object has the following attributes:

+ id
+ shortname
+ name
+ legal_name
+ description
+ contact_email_address
+ contact_phone_number
+ website
+ hq_address_street
+ hq_address_area_id
+ hq_address_city_id
+ hq_address_region_id
+ hq_country_id
+ founded
+ company_size
+ type
+ specialities
+ logo_url
+ status
+ created_at
+ updated_at

+ Parameters

    + id: 1 (required, number) - ID of the Company in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### View a Company Detail [GET]

Get detail json data company.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/company/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

        {
                "code": "20",
                "message": "Data JSON Countries retrieved.",
                "result": {
                    "total": 3,
                    "data": [
                        {
                            "id": 1,
                            "code": "ABCD",
                            "name": "Country 1",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 2,
                            "code": "EFGH",
                            "name": "Country 2",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        },
                        {
                            "id": 3,
                            "code": "IJKL",
                            "name": "Country 3",
                            "created_at": "2016-06-01 08:59:19",
                            "updated_at": "2016-06-23 07:25:10"
                        }
                    ]
                }
            }

## Companies [/company/all?token={token}]

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List All Companies [GET]

Get json data companies.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/company/all?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Link: </questions?page=2>; rel="next"

    + Body

            [
                {
                    "question": "Favourite programming language?",
                    "published_at": "2014-11-11T08:40:51.620Z",
                    "url": "/questions/1",
                    "choices": [
                        {
                            "choice": "Swift",
                            "url": "/questions/1/choices/1",
                            "votes": 2048
                        }, {
                            "choice": "Python",
                            "url": "/questions/1/choices/2",
                            "votes": 1024
                        }, {
                            "choice": "Objective-C",
                            "url": "/questions/1/choices/3",
                            "votes": 512
                        }, {
                            "choice": "Ruby",
                            "url": "/questions/1/choices/4",
                            "votes": 256
                        }
                    ]
                }
            ]

## Group Vacancy

Resources related to vacancies in the API.

## Vacancy [/vacancy/{id}?token={token}]

A Vacancy object has the following attributes:

+ id
+ company_id
+ title
+ vacancy_status
+ region_id
+ city_id
+ area_id
+ summary
+ responsibilities
+ environment_id
+ posting_date
+ due_date
+ status
+ show_company_logo
+ background_image
+ min_age
+ max_age
+ min_experience_years
+ max_experience_years
+ min_gpa_base_4
+ min_gpa_base_5
+ gender_qualification
+ min_expected_salary
+ max_expected_salary
+ created_at
+ updated_at

+ Parameters

    + id: 1 (required, number) - ID of the Vacancy in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### View a Vacancy Detail [GET]

Get detail json data vacancy.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/vacancy/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Vacancies [/vacancy/all?token={token}]

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List All Vacancies [GET]

Get json data vacancies.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/vacancy/all?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Link: </questions?page=2>; rel="next"

    + Body

            [
                {
                    "question": "Favourite programming language?",
                    "published_at": "2014-11-11T08:40:51.620Z",
                    "url": "/questions/1",
                    "choices": [
                        {
                            "choice": "Swift",
                            "url": "/questions/1/choices/1",
                            "votes": 2048
                        }, {
                            "choice": "Python",
                            "url": "/questions/1/choices/2",
                            "votes": 1024
                        }, {
                            "choice": "Objective-C",
                            "url": "/questions/1/choices/3",
                            "votes": 512
                        }, {
                            "choice": "Ruby",
                            "url": "/questions/1/choices/4",
                            "votes": 256
                        }
                    ]
                }
            ]

## Trending Vacancies [/vacancy/trending?token={token}]

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Trending Vacancies [GET]

Get json data trending of vacancies.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/vacancy/trending?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Link: </questions?page=2>; rel="next"

    + Body

            [
                {
                    "question": "Favourite programming language?",
                    "published_at": "2014-11-11T08:40:51.620Z",
                    "url": "/questions/1",
                    "choices": [
                        {
                            "choice": "Swift",
                            "url": "/questions/1/choices/1",
                            "votes": 2048
                        }, {
                            "choice": "Python",
                            "url": "/questions/1/choices/2",
                            "votes": 1024
                        }, {
                            "choice": "Objective-C",
                            "url": "/questions/1/choices/3",
                            "votes": 512
                        }, {
                            "choice": "Ruby",
                            "url": "/questions/1/choices/4",
                            "votes": 256
                        }
                    ]
                }
            ]

## Archive Vacancies [/vacancy/archive?token={token}]

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Archive Vacancies [GET]

Get json data archieve of vacancies.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/vacancy/archieve?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

    + Headers

            Link: </questions?page=2>; rel="next"

    + Body

            [
                {
                    "question": "Favourite programming language?",
                    "published_at": "2014-11-11T08:40:51.620Z",
                    "url": "/questions/1",
                    "choices": [
                        {
                            "choice": "Swift",
                            "url": "/questions/1/choices/1",
                            "votes": 2048
                        }, {
                            "choice": "Python",
                            "url": "/questions/1/choices/2",
                            "votes": 1024
                        }, {
                            "choice": "Objective-C",
                            "url": "/questions/1/choices/3",
                            "votes": 512
                        }, {
                            "choice": "Ruby",
                            "url": "/questions/1/choices/4",
                            "votes": 256
                        }
                    ]
                }
            ]

## Matched Vacancies [/vacancy/matched/{user_id}?token={token}]

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Matched Vacancies of User [GET]

Get json data matched of vacancies for user login.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/vacancy/matched/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Matched Interested Vacancies [/vacancy/matched/{user_id}/interested?token={token}]

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Matched Interested of Vacancies of User [GET]

Get json data matched interested vacancies for user login.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/vacancy/matched/1/interested?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Matched Not-Interested Vacancies [/vacancy/matched/{user_id}/notinterested?token={token}]

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Matched Not-Interested Vacancies of User [GET]

Get json data matched not-interested of vacancies for user login.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/vacancy/matched/1/notinterested?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Group User Information

Resources related to user in the API.

## User Profile [/profile/{user_id}?token={token}]

A User Profile object has the following attributes:

+ id
+ user_id
+ about
+ gender
+ marital_status
+ religion
+ address_street
+ area_id
+ city_id
+ region_id
+ country_id
+ address_zipcode
+ height
+ weight
+ linkedin_url
+ created_at
+ updated_at

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### View User Profile [GET]

Get detail json data user profile.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/profile/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Update Profile [/profile/{user_id}/update?token={token}]

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string


### Update User Profile [GET]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            email=test%40suitmedia.com&password=test

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Login Success",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 1,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "0000-00-00",
                        "email": "test@suitmedia.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "08123456789",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Profile Experiences [/profile/experiences/{user_id}?token={token}]

A User Experience object has the following attributes:

+ id
+ user_id
+ company
+ industry_id
+ profession_id
+ job_level_id
+ responsibilities
+ start_date
+ end_date
+ monthly_salary
+ is_current_job
+ resign_reason
+ created_at
+ updated_at

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Experiences of User [GET]

Get json data experiences of user.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/profile/experiences/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Add Experience [/profile/experience/{user_id}/add?token={token}]

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### Add Experience of User [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            email=test%40suitmedia.com&password=test

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Login Success",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 1,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "0000-00-00",
                        "email": "test@suitmedia.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "08123456789",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Profile Educations [/profile/educations/{user_id}?token={token}]

A User Education object has the following attributes:

+ id
+ user_id
+ degree_id
+ major_id
+ college
+ year_in
+ year_out
+ gpa
+ gpa_max_range
+ created_at
+ updated_at

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Educations of User [GET]

Get json data educations of user.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/profile/educations/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Add Education [/profile/education/{user_id}/add?token={token}]

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### Add Education of User [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            email=test%40suitmedia.com&password=test

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Login Success",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 1,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "0000-00-00",
                        "email": "test@suitmedia.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "08123456789",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Profile Organizations [/profile/organizations/{user_id}?token={token}]

A User Organization object has the following attributes:

+ id
+ user_id
+ name
+ position
+ responsibilities
+ start_date
+ end_date
+ created_at
+ updated_at

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Organizations of User [GET]

Get json data organizations of user.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/profile/organizations/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Add Organization [/profile/organization/{user_id}/add?token={token}]

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### Add Organization of User [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            email=test%40suitmedia.com&password=test

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Login Success",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 1,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "0000-00-00",
                        "email": "test@suitmedia.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "08123456789",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Profile Languages [/profile/languages/{user_id}?token={token}]

A User Language Capability object has the following attributes:

+ id
+ user_id
+ language_id
+ listen_capability
+ speak_capability
+ read_capability
+ write_capability
+ created_at
+ updated_at

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Languages of User [GET]

Get json data languages of user.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/profile/languges/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Add Language [/profile/language/{user_id}/add?token={token}]

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### Add Language of User [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            email=test%40suitmedia.com&password=test

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Login Success",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 1,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "0000-00-00",
                        "email": "test@suitmedia.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "08123456789",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Profile Skills [/profile/skills/{user_id}?token={token}]

A User Skill object has the following attributes:

+ id
+ user_id
+ skill_id
+ name
+ level
+ created_at
+ updated_at

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Skills of User [GET]

Get json data skills of user.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/profile/skills/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Add Skill [/profile/skill/{user_id}/add?token={token}]

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### Add Skill of User [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            email=test%40suitmedia.com&password=test

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Login Success",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 1,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "0000-00-00",
                        "email": "test@suitmedia.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "08123456789",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Profile Interested Industries [/profile/interested/industries/{user_id}?token={token}]

A User Interested Industry object has the following attributes:

+ id
+ user_id
+ industry_id
+ created_at
+ updated_at

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Interested Industries of User [GET]

Get json data interested industries of user.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/profile/interested/industries/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Add Interested Industry [/profile/interested/industry/{user_id}/add?token={token}]

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### Add Interested Industry of User [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            email=test%40suitmedia.com&password=test

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Login Success",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 1,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "0000-00-00",
                        "email": "test@suitmedia.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "08123456789",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Profile Interested Skills [/profile/interested/skills/{user_id}?token={token}]

A User Interested Skll object has the following attributes:

+ id
+ user_id
+ skill_id
+ created_at
+ updated_at

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Interested Skills of User [GET]

Get json data interested skills of user.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/profile/interested/skills/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Add Interested Skill [/profile/interested/skill/{user_id}/add?token={token}]

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### Add Interested Skill of User [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            email=test%40suitmedia.com&password=test

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Login Success",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 1,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "0000-00-00",
                        "email": "test@suitmedia.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "08123456789",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Profile Interested Professions [/profile/interested/professions/{user_id}?token={token}]

A User Interested Profession object has the following attributes:

+ id
+ user_id
+ profession_id
+ created_at
+ updated_at

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### List Interested Professions of User [GET]

Get json data interested professions of user.

**Example:**

```
$ curl --request GET \
  --url http://api.yesjob.suitdev.com/v1/profile/interested/professions/1?token=c909b47fbc114a34370711be381f10fa \
  --header "Cache-Control: no-cache"
```

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Add Interested Profession [/profile/interested/profession/{user_id}/add?token={token}]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            email=test%40suitmedia.com&password=test

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Login Success",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 1,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "0000-00-00",
                        "email": "test@suitmedia.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "08123456789",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Group Account

## Account Detail [/user/me?token={token}]

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### View an Account Detail [GET]

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Update Account [/user/me/update?token={token}]

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### Update Account [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            email=test%40suitmedia.com&password=test

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Login Success",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 1,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "0000-00-00",
                        "email": "test@suitmedia.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "08123456789",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Update Social Media [/user/me/updatesocmed?token={token}]

+ Parameters

    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### Update Social Media Account [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            email=test%40suitmedia.com&password=test

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Login Success",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 1,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "0000-00-00",
                        "email": "test@suitmedia.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "08123456789",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }

## Settings [/user/{user_id}/settings?token={token}]

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### View an Account Settings [GET]

+ Response 200 (application/json)

        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }

## Update Setting [/user/{user_id}/settings/update?token={token}]

+ Parameters

    + user_id: 1 (required, number) - ID of the User in form of an integer
    + token: 3448bdc9e8097cf66d969118a8098187 (required, string) - Token of User as a string

### Update Account Settings [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Cache-Control: no-cache
            Connection: keep-alive

    + Body

            email=test%40suitmedia.com&password=test

+ Response 201 (application/json)

    + Headers

            Accept-Charset: utf-8
            Connection: keep-alive

    + Body

            {
                "code": "20",
                "message": "Login Success",
                "result": {
                    "token": "8eed081e0b697e4a785fa27128b79c43",
                    "user": {
                        "id": 1,
                        "username": "johndoe",
                        "name": "John Doe",
                        "last_name": "Doe",
                        "birthdate": "0000-00-00",
                        "email": "test@suitmedia.com",
                        "picture": "http://api.yesjob.suitdev.com/v1/files/profilepicture/johndoe.jpg",
                        "role": "admin",
                        "phone_number": "08123456789",
                        "registration_date": "0000-00-00 00:00:00",
                        "last_visit": "0000-00-01 00:00:00",
                        "status": "active",
                        "escrow_amount": 500000,
                        "fb_id": null,
                        "tw_id": null,
                        "gp_id": null,
                        "referral_code": null,
                        "referral_user_id": null,
                        "created_at": "0000-00-00 00:00:00",
                        "updated_at": "0000-00-00 00:00:00"
                    }
                }
            }